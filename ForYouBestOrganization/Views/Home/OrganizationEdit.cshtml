@model DataAccessLayer.Entities.Organization

@{
    ViewBag.Title = "OrganizationEdit";
    var userList = (List<DataAccessLayer.Entities.User>)ViewData["Userlar"];
}

<h2>OrganizationEdit</h2>


@using (Html.BeginForm("OrganizationEdit", "Home", FormMethod.Post, new { enctype = "multipart/form-data" } ))
{
                @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Organization</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrgDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrgDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OrgDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Organizer, htmlAttributes: new { @class = "control-label col-md-2" })
        <select class="form-control" id="Organizer_Id" name="Organizer_Id">

            @foreach (var item in userList)
            {
                <option id="@item.Id" value="@item.Id">@item.Id)+ **@item.UserName**  </option>
            }

        </select>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="imagename" id="imagename" class="form-control" />

            @Html.ValidationMessageFor(model=>model.ImageUrl,"",new {  @class ="control-label col-md-2"})
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "OrganizationList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
